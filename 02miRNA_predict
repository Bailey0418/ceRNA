#一.multiMiR预测miRNA的靶mRNA
#1.预测miRNA靶基因
library(multiMiR)
a <- read.csv("/mnt/raid5/User/bailin/project/250725COAD+READ/result/count+DEG/CRC_DE_miRNA.csv",row.names = 1)
a <- a$gene
# 查询所有预测和验证数据库的靶基因（mRNA）
res <- get_multimir(mirna = a,
                    org = "hsa",
                    table = "validated",  # "predicted", "validated", "all"
                    summary = FALSE)
res_df <- res@data
table(res_df$database)
#predicted_df <- subset(res_df, database %in% c("targetscan", "mirdb", "pictar", "miranda"))#预测的靶点
write.csv(res_df,"miRNA_mRNA_mirtarbase.csv")
b <- unique(res_df$target_symbol)
corresult <- read.csv("/mnt/raid5/User/bailin/project/250725COAD+READ/result/miRNA_pred/miRNA-mRNA/miRNA_mRNA_cor.csv",row.names = 1)
corresult1 <- corresult[which(corresult$R < 0 & corresult$P < 0.05), ]
c <- unique(corresult1$lnc)
d <- intersect(b,c)
pair <- subset(res_df,res_df$target_symbol %in% d)
write.csv(pair,"miRNA_mRNA_pair.csv")

#2.starbase预测miRNA的靶基因（lncRNA的话不太全）
#下载所有miRNA-mRNA/lncRNA/circRNA关系对
（bash）curl 'https://rnasysu.com/encori/api/miRNATarget/?assembly=hg38&geneType=lncRNA&miRNA=all&clipExpNum=1&degraExpNum=0&pancancerNum=0&programNum=0&target=all&cellType=all' > ENCORI_hg38_CLIPseq_all_miRNA_lncRNA.txt
starbase = data.table::fread("/mnt/raid5/User/bailin/project/250725COAD+READ/result/miRNA_pred/ENCORI_hg38_CLIPseq_all_miRNA_lncRNA.txt")
dim(starbase)
a <- read.csv("/mnt/raid5/User/bailin/project/250725COAD+READ/result/count+DEG/CRC_DE_miRNA.csv",row.names = 1)
a <- a$gene
lnc_mi = starbase[starbase$miRNAid %in% a,]#准确匹配
lnc_mi <- starbase[sapply(starbase$miRNAname, function(x) any(grepl(x = x, pattern = paste0("^", a, collapse = "|")))), ]#模糊匹配，使用这个
b <- unique(lnc_mi$miRNAname)
corresult <- read.csv("/mnt/raid5/User/bailin/project/250725COAD+READ/result/miRNA_pred/miRNA-lncRNA/miRNA_lncRNA_cor.csv",row.names = 1)
corresult1 <- corresult[which(corresult$R < 0 & corresult$P < 0.05), ]
c <- unique(corresult1$lnc)
d <- intersect(b,c)

#3.使用miRNet预测lncRNA，网页构建网络后下载数据
miRNA_lncRNA <- read.csv("/mnt/raid5/User/bailin/project/250725COAD+READ/result/miRNA_pred/miRNA-lncRNA/mirnet_mir_target.csv")
a <- unique(a$Target)
corresult <- read.csv("/mnt/raid5/User/bailin/project/250725COAD+READ/result/miRNA_pred/miRNA-lncRNA/miRNA_lncRNA_cor.csv",row.names = 1)
corresult1 <- corresult[which(corresult$R < 0 & corresult$P < 0.05), ]
c <- unique(corresult1$lnc)
d <- intersect(a,c)
pair <- subset(miRNA_lncRNA,miRNA_lncRNA$Target %in% d)
write.csv(pair,"miRNA_lncRNA_pair.csv")

#4.计算miRNA与mRNA相关性（miRNA与mRNA样本命名方式不同，需要处理）
miRNA_count <- read.csv("/mnt/raid5/User/bailin/project/250725COAD+READ/result/miRNA_pred/miRNA-mRNA/DE_miRNA_count.csv",row.names = 1)
mRNA_count <- read.csv("/mnt/raid5/User/bailin/project/250725COAD+READ/result/miRNA_pred/miRNA-mRNA/DE_mRNA_count.csv",row.names = 1)
colnames(miRNA_count) <- substr(gsub("\\.", "-", colnames(miRNA_count)), 1, 15)
colnames(mRNA_count)  <- substr(gsub("\\.", "-", colnames(mRNA_count)), 1, 15)
common_samples <- intersect(colnames(miRNA_count), colnames(mRNA_count))
metadata <- data.frame(
  sampleID = common_samples,
  sampleType = ifelse(
    substr(common_samples, 14, 15) == "01", "Tumor",
    ifelse(substr(common_samples, 14, 15) == "11", "Normal", "Other")
  ),
  row.names = common_samples
)
table(metadata$sampleType)
miRNA_expr <- miRNA_count[, common_samples]
mRNA_expr  <- mRNA_count[, common_samples]

a1 <- as.matrix(miRNA_expr)
a1 <- t(a1)
a2 <- as.matrix(mRNA_expr)
a2 <- t(a2)
corresult<-data.frame(miRNA=character(0),mRNA=character(0),
                      pair=character(0),R=numeric(0),
                      P=numeric(0))
g=1
for(i in 1:ncol(a1)){
  for (j in 1:ncol(a2)) {
    c1<-cor(as.numeric(a1[,i]),as.numeric(a2[,j]),method = "pearson")
    c2<-cor.test(as.numeric(a1[,i]),as.numeric(a2[,j]),method = "pearson")$p.value
    corresult<-rbind(corresult,data.frame(gene=colnames(a1)[i],lnc=colnames(a2)[j],
                                          pair="mRNA-miRNA",R=c1,P=c2))
    g=g+1
    print(g)
  }
  saveRDS(corresult,file = "miRNA_mRNA_cor.rds")
}
p <- as.data.frame(corresult$P,romnames = rownames(corresult))
FDR <- p.adjust(p$`corresult$P`,method = "BH")
corresult$FDR <- FDR
corresult1 <- corresult[which(corresult$R < 0 & corresult$P < 0.05), ]
write.csv(corresult1,"miRNA_mRNA_cor.csv")

#热图
cor <- read.csv("/mnt/raid5/User/bailin/Project/250725COAD+READ/result/02miRNA_pred/miRNA-mRNA/miRNA_mRNA_cor.csv",row.names =1 )
library(reshape2)
library(pheatmap)
miRNA_list <- c("hsa-mir-451a","hsa-mir-346","hsa-mir-421","hsa-mir-429","hsa-mir-133b","hsa-mir-760","hsa-mir-577","hsa-mir-326","hsa-mir-496","hsa-mir-1270","hsa-mir-4525","hsa-mir-151b","hsa-mir-3909")
cor_filtered <- subset(cor, cor$gene %in% miRNA_list)
head(cor_filtered)
cor_matrix <- dcast(cor, miRNA ~ mRNA, value.var = "R")
row.names(cor_matrix) <- cor_matrix$miRNA
cor_matrix <- cor_matrix[,-1] # 去掉 miRNA 列
head(cor_matrix)
